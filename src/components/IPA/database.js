import useBaseUrl from '@docusaurus/useBaseUrl';

/** @type {Record<string, string>} */
const mappings = {
  "a": "Open_front_unrounded_vowel",
  "b": "Voiced_bilabial_plosive",
  "c": "Voiceless_palatal_plosive",
  "d": "Voiced_alveolar_plosive",
  "d͡z": "Voiced_alveolar_affricate",
  "d͡ʑ": "Voiced_alveolo-palatal_affricate",
  "d͡ʒ": "Voiced_postalveolar_affricate",
  "e": "Close-mid_front_unrounded_vowel",
  "f": "Voiceless_labiodental_fricative",
  "g": "Voiced_velar_plosive",
  "i": "Close_front_unrounded_vowel",
  "j": "Palatal_approximant",
  "k": "Voiceless_velar_plosive",
  "l": "Alveolar_lateral_approximant",
  "m": "Bilabial_nasal",
  "n": "Alveolar_nasal",
  "o": "Close-mid_back_rounded_vowel",
  "p": "Voiceless_bilabial_plosive",
  "r": "Alveolar_trill",
  "s": "Voiceless_alveolar_fricative",
  "t": "Voiceless_alveolar_plosive",
  "t͡s": "Voiceless_alveolar_affricate",
  "t͡ɕ": "Voiceless_alveolo-palatal_affricate",
  "t͡ʃ": "Voiceless_palato-alveolar_affricate",
  "u": "Close_back_rounded_vowel",
  "v": "Voiced_labiodental_fricative",
  "x": "Voiceless_dorso-palatal_velar_fricative",
  "y": "Close_front_rounded_vowel",
  "z": "Voiced_alveolar_fricative",
  "ɑ": "Open_back_unrounded_vowel",
  "ɒ": "Open_back_rounded_vowel",
  "ɔ": "Open-mid_back_rounded_vowel",
  "ɕ": "Voiceless_alveolo-palatal_fricative",
  "ə": "Mid-central_vowel",
  "ɛ": "Open-mid_front_unrounded_vowel",
  "ɟ": "Voiced_palatal_plosive",
  "ɦ": "Voiced_glottal_fricative",
  "ɨ": "Close_central_unrounded_vowel",
  "ɪ": "Near-close_near-front_unrounded_vowel",
  "ɲ": "Palatal_nasal",
  "ʂ": "Voiceless_retroflex_fricative",
  "ʃ": "Voiceless_palato-alveolar_sibilant",
  "ʊ": "Near-close_near-back_rounded_vowel",
  "ʋ": "Labiodental_approximant",
  "ʌ": "Open-mid_back_unrounded_vowel",
  "ʎ": "Palatal_lateral_approximant",
  "ʐ": "Voiced_retroflex_fricative",
  "ʑ": "Voiced_alveolo-palatal_fricative",
  "ʒ": "Voiced_postalveolar_fricative",
  'ja': 'ja',
  'je': 'je',
  'jɛ': 'je',
  'jæ': 'jae',
  'jɔ̃': 'jo',
  'mjǝrtvɪ': 'mjertvy',
  'dʲɛɫanʲĭɛ': 'djelanje',
};

export default new Proxy({}, {
  get: function (target, key) {
    const filename = mappings[key];
    return filename && `${useBaseUrl(`audio/${filename}.mp3`)}`;
  },
});
